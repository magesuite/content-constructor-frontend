<?php
/**
 * @var $block \MageSuite\ContentConstructorFrontend\Block\Component\ProductGrid
 * @var $teaserCss \MageSuite\ContentConstructorFrontend\Helper\TeaserCss
 */
$viewModel = $block->getViewModel();
$componentConfiguration = $block->getData();
$teaserCss = $this->helper(\MageSuite\ContentConstructorFrontend\Helper\TeaserCss::class);
$visibility = $block->getVisibilityClass();
$items = $viewModel->getItems();
$componentClasses = $block->getSkipSpacing() ? ' cs-products-grid--skip-spacing' : '';
$componentClasses .= ' ' . $block->getVar('product_grid/additional_css_classes');
$productsGridJsSettings = json_encode($block->getVar('grid_layout/product_grid/js') ?: '{}');
$products = $viewModel->getProducts();
$teasersSetRandId = $teaserCss->getUniqueComponentId();
$viewMode = $block->getData('view_mode') ?? 'grid';

$containerClasses = $block->getContainerMix();
if (isset($componentConfiguration['cc_css_classes'])):
    $containerClasses .= ' ' . $componentConfiguration['cc_css_classes'];
endif;

$includeStylesInComponent = $block->getVar('product_grid/include_styles_in_component');
?>

<?php if ($includeStylesInComponent): ?>
    <?= $block->getCssOnce('css/products-grid.css'); ?>
    <?= $block->getCssOnce('css/grid-layout.css'); ?>
<?php endif; ?>

<div class="cs-container cs-container--products-grid<?= $containerClasses ?><?= $visibility ? ' ' .$visibility : ''; ?>">
    <div class="cs-container__inner">
        <div class="cs-products-grid<?= $componentClasses ?>">
            <div class="cs-grid-layout cs-products-grid__grid-layout">
                <ul class="cs-grid-layout__grid cs-products-grid__grid" id="pg-<?= $teasersSetRandId ?>">
                    <?php if(!empty($items) && $viewModel->useTeaser()): ?>
                        <?php
                            $newTeaserConfig = [
                                "scenario" => [
                                    'desktopLayout' => [
                                        'id' => 1,
                                    ],
                                    'mobileLayout' => [
                                        'id' => 'mobile-large',
                                    ],
                                    'contentPlacement' => [
                                        'id' => 'over',
                                    ],
                                    'teaserWidth' => [
                                        'id' => 'window',
                                    ]
                                ],
                                "items" => $items
                            ];
                        ?>

                        <?= $this->getLayout()
                            ->createBlock('MageSuite\ContentConstructorFrontend\Block\Component\ImageTeaser')
                            ->setData($newTeaserConfig)
                            ->setGridTeaser(true)
                            ->setTeaserId($teasersSetRandId . '-0')
                            ->setTeaserData($items[0])
                            ->setBrickClass('cs-grid-layout__brick')
                            ->setMix('cs-image-teaser--grid-teaser ' . $block->getMix())
                            ->setContainerMix('cs-container--grid-teaser ' . $block->getContainerMix())
                            ->toHtml();
                        ?>
                    <?php endif; ?>
                    <?php foreach ($products as $product): ?>
                        <li class="cs-grid-layout__brick cs-products-grid__item">
                            <?= $viewModel->renderProductTile($product, null, $viewMode) ?>
                        </li>
                    <?php endforeach ?>
                </ul>
                <?= $this->getLayout()
                    ->createBlock(\MageSuite\ContentConstructorFrontend\Block\TeaserCss::class)
                    ->setTemplate('MageSuite_ContentConstructorFrontend::teasers-css.phtml')
                    ->setUseTeasers($viewModel->useTeaser())
                    ->setTeasersConfig([$viewModel->getTeasersConfiguration()])
                    ->setTeasersSetId($teasersSetRandId)
                    ->setProductsCount(count($products))
                    ->setIsProductsGrid(true)
                    ->setPgId('pg-' . $teasersSetRandId)
                    ->setRowsConfig([
                        'mobile' => $viewModel->getRowsMobile(),
                        'tablet' => $viewModel->getRowsTablet(),
                        'desktop' => $viewModel->getRowsDesktop()
                    ])
                    ->toHtml(); ?>
            </div>
        </div>
    </div>
</div>
